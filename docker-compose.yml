version: '3.8'

services:
  # Redis for Channels and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # PostgreSQL database (optional)
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: voiceforms
      POSTGRES_USER: voiceforms
      POSTGRES_PASSWORD: voiceforms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voiceforms"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Django application
  web:
    build: .
    command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 voicegen.asgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://voiceforms:voiceforms_password@db:5432/voiceforms
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for background tasks
  celery:
    build: .
    command: celery -A voicegen worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://voiceforms:voiceforms_password@db:5432/voiceforms
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
      - web

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    command: celery -A voicegen beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://voiceforms:voiceforms_password@db:5432/voiceforms
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
      - web

volumes:
  postgres_data:
  redis_data:
  static_volume:

